#!/usr/bin/perl -w
use strict;
use Config::Tiny;
use Getopt::Long;
use LWP::UserAgent;
use URI;
use JSON;
use Date::Manip::Date;

my ($symbol, $currency, $date);
my @fields = ();
GetOptions("symbol=s" => \$symbol, "currency=s" => \$currency, "date=s" => \$date, "fields=s" => \@fields);

my $config = Config::Tiny->read("$ENV{HOME}/.coin-tax") or exit_error("$ENV{HOME}/.coin-tax: not found");

my $ua = LWP::UserAgent->new;
$ua->agent("coinlib cli/1.0");
$ua->timeout(5);
my $api = URI->new($config->{"Coinlib-Historical"}->{api}) or exit_error("api url not configured");

my %q_params = ();
if ($symbol) {
  $q_params{"symbol"} = $symbol;
}
if ($currency) {
  $q_params{"currency"} = $currency;
}
if ($date) {
  $q_params{"date"} = $date;
}

my $url = URI->new($api);
$url->query_form(%q_params);

my $res = $ua->get($url);

if (!$res->is_success) {
  exit_error($res->content);
}

my $jsonp = JSON->new->utf8;
my $json = $jsonp->decode($res->decoded_content);
if (!keys %$json) {
  exit_error("no matching record found");
}

if (@fields) {
  print join(",", map { $json->{$_} || "" } @fields) . "\n";
} else {
  print $jsonp->encode($json) . "\n";
}
exit 0;

sub exit_error {
  my $message = shift;
  print("$message\n");
  exit 1;
}
